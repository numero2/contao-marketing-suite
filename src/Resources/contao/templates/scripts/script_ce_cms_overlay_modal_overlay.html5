<script>

    (()=>{

        const overlay = document.querySelector('cms-modal-overlay[data-cms-id="<?= $this->cmsID; ?>"]');

        if( !overlay ) {
            return;
        }

        if( typeof(window.localStorage) !== "undefined" ) {

            let show = true;
            let itemName = 'cms-modal-overlay-'+overlay.dataset.cmsId;

            let tCurrentChange = <?= $this->tstamp; ?>;
            let tExpires = <?= $this->Template->expires; ?>;
            let dismissed = window.localStorage.getItem(itemName);

            if( dismissed ) {

                let tCurrent = Math.round(new Date().getTime()/1000);
                let aSaved = dismissed.split(',');
                let tLastChanged = aSaved[0];
                let tShouldExpire = aSaved[1];

                if( tCurrent > tShouldExpire || tCurrentChange != tLastChanged ) {
                    window.localStorage.removeItem(itemName);
                    dismissed = null;
                } else {
                    show = false;
                }
            }

            const handleDismiss = ()=>{

                if( !dismissed ) {
                    window.localStorage.setItem(itemName, tCurrentChange+','+tExpires);
                }

                overlay.parentNode.removeChild(overlay);
            };

            const countView = ()=>{

                const oReq = new XMLHttpRequest();

                oReq.withCredentials = true;
                oReq.open("GET", "<?= $this->view; ?>");
                oReq.setRequestHeader("X-Requested-With", "XMLHttpRequest");
                oReq.send();
            }

            const closeOverlay = e => {

                if( e.target.tagName === 'CMS-BUTTON' || e.keyCode === 27 ) {
                    handleDismiss();
                }
            };

            if( show ) {

                overlay.removeAttribute('style');
                countView();

                overlay.querySelector('cms-button').addEventListener('click', closeOverlay);
                document.addEventListener('keydown', closeOverlay);

            } else {
                handleDismiss();
            }

        } else {
            overlay.parentNode.removeChild(overlay);
        }

    })();

</script>