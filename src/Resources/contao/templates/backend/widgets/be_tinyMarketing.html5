<?php

namespace Contao;

if( $GLOBALS['TL_CONFIG']['useRTE'] ):

    if( version_compare(VERSION, '4.10', '<') ):
?>
        <script>

            (function(){

                var src = "<?= version_compare(VERSION, '4.5', '<') ? TL_ASSETS_URL . 'assets/tinymce4/js/tinymce.min.js' : $this->asset('js/tinymce.min.js', 'contao-components/tinymce4'); ?>";
                var prevScript = document.querySelector('script[src="'+src+'"]');

                var initTiny = function() {

                    window.tinymce && tinymce.init({
                        skin: 'contao',
                        selector: '#<?= $this->selector ?>',
                        language: '<?= Backend::getTinyMceLanguage() ?>',
                        element_format: 'html',
                        document_base_url: '<?= Environment::get('base') ?>',
                        entities: '160,nbsp,60,lt,62,gt,173,shy',
                        branding: false,
                        setup: function(editor) {
                            editor.getElement().removeAttribute('required');
                        },
                        init_instance_callback: function(editor) {
                            if (document.activeElement && document.activeElement.id && document.activeElement.id == editor.id) {
                                editor.editorManager.get(editor.id).focus();
                            }
                            editor.on('focus', function() { Backend.getScrollOffset(); });

                            // trigger custom event for text analysis
                            var tinyEvent = document.createEvent('Event');
                            tinyEvent.initEvent('tinyMCEInitialized', true, true);
                            document.dispatchEvent(tinyEvent);
                        },
                        file_browser_callback: function(field_name, url, type, win) {
                            Backend.openModalBrowser(field_name, url, type, win);
                        },
                        file_browser_callback_types: <?= json_encode($this->fileBrowserTypes) ?>,

                    <?php if( $this->selector == 'ctrl_cms_tag_text' ): ?>
                        plugins: 'autosave charmap code fullscreen link paste searchreplace stripnbsp tabfocus',
                    <?php else: ?>
                        plugins: 'autosave charmap code fullscreen image link lists paste searchreplace stripnbsp tabfocus visualblocks',
                    <?php endif; ?>
                        browser_spellcheck: true,
                        tabfocus_elements: ':prev,:next',
                        importcss_append: true,
                        extended_valid_elements: 'q[cite|class|title],article,section,hgroup,figure,figcaption',
                        menubar: 'file edit insert view format',
                    <?php if( $this->selector == 'ctrl_cms_tag_text' ): ?>
                        toolbar: 'link unlink | bold italic | undo redo | code',
                    <?php else: ?>
                        toolbar: 'link unlink | image | bold italic | bullist numlist | undo redo | code',
                    <?php endif; ?>
                        paste_as_text: true
                    });
                };

                if( !prevScript ) {

                    var script = document.createElement('script');
                    script.src = src;
                    document.getElementsByTagName('head')[0].appendChild(script);
                }

                var check = window.setInterval(function(){

                    if( window.tinymce ) {
                        window.clearInterval(check);
                        initTiny();
                    }

                },100);

            })();

        </script>

        <style type="text/css">
        .mce-menu-align.mce-menu-sub > div > .mce-menu-item:nth-last-child(1) { display: none; }
        </style>

    <?php else: ?>

        <script>

            (function(){

                var src = "<?= $this->asset('js/tinymce.min.js', 'contao-components/tinymce4') ?>";
                var prevScript = document.querySelector('script[src="'+src+'"]');

                var initTiny = function() {

                    window.tinymce && tinymce.init({
                        selector: '#<?= $this->selector ?>',
                        min_height: 336,
                        language: '<?= Backend::getTinyMceLanguage() ?>',
                        element_format: 'html',
                        document_base_url: '<?= Environment::get('base') ?>',
                        entities: '160,nbsp,60,lt,62,gt,173,shy',
                        branding: false,
                        setup: function(editor) {
                            editor.getElement().removeAttribute('required');
                        },
                        init_instance_callback: function(editor) {

                            if (document.activeElement && document.activeElement.id && document.activeElement.id == editor.id) {
                                editor.editorManager.get(editor.id).focus();
                            }
                            editor.on('focus', function() { Backend.getScrollOffset(); });

                            // trigger custom event for text analysis
                            var tinyEvent = document.createEvent('Event');
                            tinyEvent.initEvent('tinyMCEInitialized', true, true);
                            document.dispatchEvent(tinyEvent);
                        },

                        <?php $this->block('picker'); ?>
                        file_picker_callback: function (callback, value, meta) {
                            Backend.openModalSelector({
                                'id': 'tl_listing',
                                'title': document.getElement('.tox-dialog__title').get('text'),
                                'url': Contao.routes.backend_picker + '?context=' + (meta.filetype == 'file' ? 'link' : 'file') + '&amp;extras[fieldType]=radio&amp;extras[filesOnly]=true&amp;extras[source]=<?= $this->source ?>&amp;value=' + value + '&amp;popup=1',
                                'callback': function(table, val) {
                                    callback(val.join(','));
                                }
                            });
                        },
                        file_picker_types: <?= json_encode($this->fileBrowserTypes) ?>,
                        <?php $this->endblock(); ?>

                        content_css: 'system/themes/<?= Backend::getTheme() ?>/tinymce.min.css',

                        <?php $this->block('plugins'); ?>
                        <?php if( $this->selector == 'ctrl_cms_tag_text' ): ?>
                            plugins: 'autosave charmap code fullscreen link paste searchreplace stripnbsp tabfocus',
                        <?php else: ?>
                            plugins: 'autosave charmap code fullscreen image link lists paste searchreplace stripnbsp tabfocus visualblocks',
                        <?php endif; ?>
                        <?php $this->endblock(); ?>

                        <?php $this->block('valid_elements'); ?>
                        extended_valid_elements: 'q[cite|class|title],article,section,hgroup,figure,figcaption',
                        <?php $this->endblock(); ?>

                        <?php $this->block('menubar'); ?>
                        menubar: 'file edit insert view format',
                        <?php $this->endblock(); ?>

                        <?php $this->block('toolbar'); ?>
                        <?php if( $this->selector == 'ctrl_cms_tag_text' ): ?>
                            toolbar: 'link unlink | bold italic | undo redo | code',
                        <?php else: ?>
                            toolbar: 'link unlink | image | bold italic | bullist numlist | undo redo | code',
                        <?php endif; ?>
                        <?php $this->endblock(); ?>

                        <?php $this->block('custom'); ?>
                        <?php $this->endblock(); ?>

                        browser_spellcheck: true,
                        tabfocus_elements: ':prev,:next',
                        importcss_append: true,
                        paste_as_text: true
                    });
                };

                if( !prevScript ) {

                    var script = document.createElement('script');
                    script.src = src;
                    document.getElementsByTagName('head')[0].appendChild(script);
                }

                var check = window.setInterval(function(){

                    if( window.tinymce ) {
                        window.clearInterval(check);
                        initTiny();
                    }

                },100);
            })();
        </script>

    <?php endif; ?>

<?php endif; ?>

